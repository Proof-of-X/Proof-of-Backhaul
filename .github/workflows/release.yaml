name: Release Binaries and Docker
on: 
  workflow_dispatch:

jobs:
  build:
    defaults:
      run:
        working-directory: dart/src
    runs-on:  ${{ matrix.os }}
    outputs:
      prover_version: ${{ steps.prover_version.outputs.version }}
      challenger_version: ${{ steps.challenger_version.outputs.version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        sdk: [stable] #2.19.2 as of Feb 2023
        include:
        - os: ubuntu-latest
          os-version: x64/Linux
          file-extension: '.exe'
          build-command: './build'

        - os: macOS-latest
          os-version: x64/Darwin
          file-extension: '.exe'
          build-command: './build'

        - os: windows-latest
          os-version: x64/Windows_NT
          file-extension: '.exe'
          build-command: '.\build.cmd'


    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: dart module
      uses: dart-lang/setup-dart@v1
      with:
        sdk: ${{ matrix.sdk }}

    - name: create output directories
      run: |
        mkdir -p bin/${{ matrix.os-version }}/pob/
        mkdir -p bin/${{ matrix.os-version }}/pol/

    - name: script permission
      run: chmod +x install-deps; chmod +x build; chmod +x build; chmod +x build-pob; chmod +x build-pol;
      working-directory: dart/run

    - name: install dependencies
      run: dart pub get
      
    - name: run build script
      run: |
        ${{ matrix.build-command }}
      working-directory: dart/run

    - name: rename and move directory
      run: |
        cp ../bin/pob/run-pob-prover.exe bin/${{ matrix.os-version }}/pob/run-pob-prover${{ matrix.file-extension }}
        cp ../bin/pob/run-pob-challenger.exe bin/${{ matrix.os-version }}/pob/run-pob-challenger${{ matrix.file-extension }}
        cp ../bin/pol/run-pol-prover.exe bin/${{ matrix.os-version }}/pol/run-pol-prover${{ matrix.file-extension }}
        cp ../bin/pol/run-pol-challenger.exe bin/${{ matrix.os-version }}/pol/run-pol-challenger${{ matrix.file-extension }}

    - name: enable executable permission
      run: |
        chmod +x bin/${{ matrix.os-version }}/pob/run-pob-prover${{ matrix.file-extension }}
        chmod +x bin/${{ matrix.os-version }}/pob/run-pob-challenger${{ matrix.file-extension }}
        chmod +x bin/${{ matrix.os-version }}/pol/run-pol-prover${{ matrix.file-extension }}
        chmod +x bin/${{ matrix.os-version }}/pol/run-pol-challenger${{ matrix.file-extension }}

    - if: runner.os == 'Linux'
      name: get pob prover version
      id: pob_prover_version
      run: echo "version=$(bin/${{ matrix.os-version }}/pob/run-pob-prover${{ matrix.file-extension }} -v)" >> "$GITHUB_OUTPUT"

    - if: runner.os == 'Linux'
      name: get pob challenger version
      id: pob_challenger_version
      run: echo "version=$(bin/${{ matrix.os-version }}/pob/run-pob-challenger${{ matrix.file-extension }} -v)">> "$GITHUB_OUTPUT"

    - if: runner.os == 'Linux'
      name: get pol prover version
      id: pol_prover_version
      run: echo "version=$(bin/${{ matrix.os-version }}/pol/run-pol-prover${{ matrix.file-extension }} -v)" >> "$GITHUB_OUTPUT"

    - if: runner.os == 'Linux'
      name: get pol challenger version
      id: pol_challenger_version
      run: echo "version=$(bin/${{ matrix.os-version }}/pol/run-pol-challenger${{ matrix.file-extension }} -v)">> "$GITHUB_OUTPUT"

    - if: runner.os == 'Linux'
      name: make version.txt
      run: |
        echo "pob_prover_client=\"${{ steps.pob_prover_version.outputs.version }}\"" > bin/version.txt
        echo "pob_challenger_client=\"${{ steps.pob_challenger_version.outputs.version }}\"" >> bin/version.txt
        echo "pol_prover_client=\"${{ steps.pob_prover_version.outputs.version }}\"" >> bin/version.txt
        echo "pol_challenger_client=\"${{ steps.pob_challenger_version.outputs.version }}\"" >> bin/version.txt

    - name: upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: dart/src/bin

  release_public:
    needs: build
    runs-on:  ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v3

    - name: remove old binaries
      run: |
        rm -rfv release/latest/arm64/Darwin/run-pob-challenger.exe
        rm -rfv release/latest/x64/Darwin/run-pob-challenger.exe  
        rm -rfv release/latest/x64/Linux/run-pob-challenger.exe   
        rm -rfv release/latest/x64/Windows_NT/run-pob-challenger.exe
        rm -rfv release/latest/arm64/Darwin/run-pob-prover.exe
        rm -rfv release/latest/x64/Darwin/run-pob-prover.exe  
        rm -rfv release/latest/x64/Linux/run-pob-prover.exe   
        rm -rfv release/latest/x64/Windows_NT/run-pob-prover.exe

    - name: remove old binaries
      run: |
        rm -rfv release/latest/arm64/Darwin/run-pol-challenger.exe
        rm -rfv release/latest/x64/Darwin/run-pol-challenger.exe  
        rm -rfv release/latest/x64/Linux/run-pol-challenger.exe   
        rm -rfv release/latest/x64/Windows_NT/run-pol-challenger.exe
        rm -rfv release/latest/arm64/Darwin/run-pol-prover.exe
        rm -rfv release/latest/x64/Darwin/run-pol-prover.exe  
        rm -rfv release/latest/x64/Linux/run-pol-prover.exe   
        rm -rfv release/latest/x64/Windows_NT/run-pol-prover.exe

    - name: remove old binaries
      run: |
        rm -rfv release/latest/arm64/Darwin/pob/run-pob-challenger.exe
        rm -rfv release/latest/x64/Darwin/pob/run-pob-challenger.exe  
        rm -rfv release/latest/x64/Linux/pob/run-pob-challenger.exe   
        rm -rfv release/latest/x64/Windows_NT/pob/run-pob-challenger.exe
        rm -rfv release/latest/arm64/Darwin/pob/run-pob-prover.exe
        rm -rfv release/latest/x64/Darwin/pob/run-pob-prover.exe  
        rm -rfv release/latest/x64/Linux/pob/run-pob-prover.exe   
        rm -rfv release/latest/x64/Windows_NT/pob/run-pob-prover.exe

    - name: remove old binaries
      run: |
        rm -rfv release/latest/arm64/Darwin/pol/run-pol-challenger.exe
        rm -rfv release/latest/x64/Darwin/pol/run-pol-challenger.exe  
        rm -rfv release/latest/x64/Linux/pol/run-pol-challenger.exe   
        rm -rfv release/latest/x64/Windows_NT/pol/run-pol-challenger.exe
        rm -rfv release/latest/arm64/Darwin/pol/run-pol-prover.exe
        rm -rfv release/latest/x64/Darwin/pol/run-pol-prover.exe  
        rm -rfv release/latest/x64/Linux/pol/run-pol-prover.exe   
        rm -rfv release/latest/x64/Windows_NT/pol/run-pol-prover.exe

    - uses: actions/download-artifact@v3
      with:
        name: binaries
        path: bin/

    - name: copy files
      run: |
        cp -r bin/* release/latest/

      env:
        version: ${{needs.build.outputs.prover_version}}

    # - name: make config symlink
    #   run: |
    #     mkdir -p release/latest/arm64/Darwin
    #     ln -s ../../../../config/pob release/latest/arm64/Darwin/config
    #     ln -s ../../../../config/pob release/latest/x64/Darwin/config
    #     ln -s ../../../../config/pob release/latest/x64/Linux/config
    #     ln -s ../../../../config/pob release/latest/x64/Windows_NT/config

    - name: remove bin
      run: rm -rfv bin/

    - name: commit & push changes     
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "generated binaries"
        git push

#sign code windows
  sign_windows:
    needs: release_public
    runs-on:  windows-latest
    steps:

    - name: checkout
      uses: actions/checkout@v3

    - name: update repo
      run: git pull

    - name: sign windows exe
      uses: dlemstra/code-sign-action@v1
      with:
        certificate: '${{ secrets.CERT_WINDOWS }}'
        password: '${{ secrets.CERT_WINDOWS_PWD }}'
        folder: release/latest/x64/Windows_NT/pob/
        recursive: true
        files: |
          run-pob-prover.exe
          run-pob-challenger.exe

    - name: sign windows exe
      uses: dlemstra/code-sign-action@v1
      with:
        certificate: '${{ secrets.CERT_WINDOWS }}'
        password: '${{ secrets.CERT_WINDOWS_PWD }}'
        folder: release/latest/x64/Windows_NT/pol/
        recursive: true
        files: |
          run-pol-prover.exe
          run-pol-challenger.exe

    - name: commit & push changes    
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "windows exe code signing"
        git push


#docker workflow
  create_docker_version:
    needs: release_public
    runs-on:  ubuntu-latest
    steps:
    - name: checkout 
      id: checkout
      uses: actions/checkout@v3

    - name: enable permission
      run: |
        chmod +x release/latest/x64/Linux/pob/run-pob-prover.exe
        chmod +x release/latest/x64/Linux/pob/run-pob-challenger.exe
        chmod +x release/latest/x64/Linux/pol/run-pol-prover.exe
        chmod +x release/latest/x64/Linux/pol/run-pol-challenger.exe

    - name: get pob prover version
      id: pob_prover_version
      run: echo "version=$(release/latest/x64/Linux/pob/run-pob-prover.exe -v)" >> "$GITHUB_OUTPUT"

    - name: get pob challenger version
      id: pob_challenger_version
      run: echo "version=$(release/latest/x64/Linux/pob/run-pob-challenger.exe -v)" >> "$GITHUB_OUTPUT"

    - name: get pol prover version
      id: pol_prover_version
      run: echo "version=$(release/latest/x64/Linux/pol/run-pol-prover.exe -v)" >> "$GITHUB_OUTPUT"

    - name: get pol challenger version
      id: pol_challenger_version
      run: echo "version=$(release/latest/x64/Linux/pol/run-pol-challenger.exe -v)" >> "$GITHUB_OUTPUT"

    - name: Build the Docker image
      run: | 
        docker build --target pob_challenger -t witnesschain/pob_challenger .; 
        docker tag witnesschain/pob_challenger:latest witnesschain/pob_challenger:${{steps.pob_challenger_version.outputs.version}}; 
        docker build --target pob_prover -t witnesschain/pob_prover .;
        docker tag witnesschain/pob_prover:latest witnesschain/pob_prover:${{steps.pob_prover_version.outputs.version}}; 

        docker build --target pol_challenger -t witnesschain/pol_challenger .; 
        docker tag witnesschain/pol_challenger:latest witnesschain/pol_challenger:${{steps.pol_challenger_version.outputs.version}}; 
        docker build --target pob_prover -t witnesschain/pol_prover .;
        docker tag witnesschain/pol_prover:latest witnesschain/pol_prover:${{steps.pol_prover_version.outputs.version}}; 

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Upload Docker image to Docker Hub
      run: |
        docker push witnesschain/pob_challenger:latest;
        docker push witnesschain/pob_challenger:${{steps.pob_challenger_version.outputs.version}};
        docker push witnesschain/pob_prover:latest;
        docker push witnesschain/pob_prover:${{steps.pob_prover_version.outputs.version}};

        docker push witnesschain/pol_challenger:latest;
        docker push witnesschain/pol_challenger:${{steps.pol_challenger_version.outputs.version}};
        docker push witnesschain/pol_prover:latest;
        docker push witnesschain/pol_prover:${{steps.pol_prover_version.outputs.version}};