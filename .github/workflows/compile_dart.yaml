name: compile dart and push
on: 
  workflow_dispatch:
    
jobs:
  build:
    defaults:
      run:
        working-directory: dart/src
    runs-on:  ${{ matrix.os }}
    outputs:
      prover_version: ${{ steps.prover_version.outputs.version }}
      challenger_version: ${{ steps.challenger_version.outputs.version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        sdk: [stable] #2.19.2 as of Feb 2023
        include:
        - os: ubuntu-latest
          os-version: x64/Linux
          file-extension: '.exe'
          build-command: './build'

        - os: macOS-latest
          os-version: x64/Darwin
          file-extension: '.exe'
          build-command: './build'

        - os: windows-latest
          os-version: x64/Windows_NT
          file-extension: '.exe'
          build-command: '.\build.cmd'

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - if: runner.os == 'Linux'
      name: versioning            
      id: versioning
      uses: codacy/git-version@2.7.1
      with:
        dev-branch: develop
        release-branch: production

    - if: runner.os == 'Linux'
      name: tag commit
      uses: rickstaa/action-create-tag@v1
      with:
        tag: ${{steps.versioning.outputs.version}}
        force_push_tag: true

    - name: dart module
      uses: dart-lang/setup-dart@v1
      with:
        sdk: ${{ matrix.sdk }}

    - name: install dependencies
      run: dart pub get

    - name: create output directory
      run: mkdir -p bin/${{ matrix.os-version }}/

    - run: ls
      working-directory: dart/run

    - name: run build script
      run: |
        ${{ matrix.build-command }}
      working-directory: dart/run

    - name: get prover version
      id: prover_version
      run: echo "version=$(../bin/run-prover.exe -v)" >> "$GITHUB_OUTPUT"

    - name: get challenger version
      id: challenger_version
      run: echo "version=$(../bin/run-challenger.exe -v)">> "$GITHUB_OUTPUT"

    - name: rename and move directory
      run: |
        cp ../bin/run-prover.exe bin/${{ matrix.os-version }}/run-prover${{ matrix.file-extension }}
        cp ../bin/run-challenger.exe bin/${{ matrix.os-version }}/run-challenger${{ matrix.file-extension }}

    - name: enable executable permission
      run:
       chmod -x 

    - if: runner.os == 'Linux'
      name: make version.txt
      run: |
        echo "pob_prover_client=\"${{ steps.prover_version.outputs.version }}\"" > bin/version.txt
        echo "pob_challenger_client=\"${{ steps.challenger_version.outputs.version }}\"" >> bin/version.txt

    - name: upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: dart/src/bin

  release_public:
    needs: build
    runs-on:  ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: remove latest 
      run: rm -rfv release/latest/

    - uses: actions/download-artifact@v3
      with:
        name: binaries
        path: bin/

    - name: copy files
      run: |
        cp -r bin/ release/latest/
      # cp -r bin/ release/$version/      #don't persist versions
      env:
        version: ${{needs.build.outputs.prover_version}}

    - name: make config symlink
      run: |
        mkdir -p release/latest/arm64/Darwin
        ln -s ../../../../config release/latest/arm64/Darwin/config
        ln -s ../../../../config release/latest/x64/Darwin/config
        ln -s ../../../../config release/latest/x64/Linux/config
        ln -s ../../../../config release/latest/x64/Windows_NT/config

    - name: remove bin
      run: rm -rfv bin/

    - name: Commit & Push changes
      uses: actions-js/push@master


